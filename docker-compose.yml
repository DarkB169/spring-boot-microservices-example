

services:

  eureka-server:
    build: ./eureka-server
    ports:
      - "8761:8761"
    networks:
      - microservices

  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
    networks:
      - microservices

  user-service:
    build: ./user-service
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
      - eureka-server
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/userdb
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
    networks:
      - microservices

  notes-service:
    build: ./notes-service
    ports:
      - "8082:8082"
    depends_on:
      - mongodb
      - eureka-server
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/notesdb
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - microservices

  frontend:
    build: ./gp_frontend
    ports:
      - "3000:80"
    restart: always
    depends_on:
      - user-service
      - notes-service
    networks:
      - microservices

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - microservices

  mongodb:
    image: mongodb/mongodb-community-server:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: graduationdb
    volumes:
      - mongo_data:/data/db
    networks:
      - microservices

volumes:
  mongo_data:

networks:
  microservices:
    driver: bridge